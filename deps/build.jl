using BinaryProvider # requires BinaryProvider 0.3.0 or later

dependencies = [
    "https://github.com/juan-pablo-vielma/ASLBuilder/releases/download/v3.1.0-beta2/build_ASLBuilder.v3.1.0.jl",
    "https://github.com/juan-pablo-vielma/COINBLASBuilder/releases/download/v1.4.6-beta2/build_COINBLASBuilder.v1.4.6.jl",
    "https://github.com/juan-pablo-vielma/COINLapackBuilder/releases/download/v1.5.6-beta/build_COINLapackBuilder.v1.5.6.jl",
    "https://github.com/juan-pablo-vielma/COINMetisBuilder/releases/download/v1.3.5-beta/build_COINMetisBuilder.v1.3.5.jl",
    "https://github.com/juan-pablo-vielma/COINMumpsBuilder/releases/download/v1.6.0-beta/build_COINMumpsBuilder.v1.6.0.jl"
]

for dependency in reverse(dependencies)
    download(dependency,basename(dependency))
    evalfile(basename(dependency))
end


# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libipopt"], :libipopt),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/juan-pablo-vielma/IpoptBuilder/releases/download/v3.12.10-beta"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/IpoptBuilder.v3.12.10.aarch64-linux-gnu.tar.gz", "fc4e697251fff5ab073552e298131b4bef70008cd5c3e36f62726a2e81e4694c"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/IpoptBuilder.v3.12.10.arm-linux-gnueabihf.tar.gz", "bffb3ddea9ce6fce4a59144261ea8c129b00a6ae4476f09107d5f0a20cc4afc8"),
    Linux(:i686, :glibc) => ("$bin_prefix/IpoptBuilder.v3.12.10.i686-linux-gnu.tar.gz", "83f442fd0383cccdc744b9769e5a9ee5b1289a970a798d618691aa5e871a1c66"),
    Windows(:i686) => ("$bin_prefix/IpoptBuilder.v3.12.10.i686-w64-mingw32.tar.gz", "a77e79a03722172f3b6f1e8b7a73ce5e78ad13a6346f785bc1c69da5aded88dc"),
    MacOS(:x86_64) => ("$bin_prefix/IpoptBuilder.v3.12.10.x86_64-apple-darwin14.tar.gz", "e9d2053a4aeb15f8788478a854a64f5095fd65310fa8abdf7c6b52be9b976e45"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/IpoptBuilder.v3.12.10.x86_64-linux-gnu.tar.gz", "3f1600b88264f85803c1433cde555dd9b7c978bf15bcdf4fd5371a7b2b529cb2"),
    Windows(:x86_64) => ("$bin_prefix/IpoptBuilder.v3.12.10.x86_64-w64-mingw32.tar.gz", "2c01e163c2dbf6e6ec9ab3760dac94074c018453f913908d09e13fc65681b208"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
