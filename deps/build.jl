using BinaryProvider # requires BinaryProvider 0.3.0 or later

dependencies = [
    "https://github.com/juan-pablo-vielma/COINBLASBuilder/releases/download/v1.4.6-beta2/build_COINBLASBuilder.v1.4.6.jl",
    "https://github.com/juan-pablo-vielma/COINLapackBuilder/releases/download/v1.5.6-beta/build_COINLapackBuilder.v1.5.6.jl",
    "https://github.com/juan-pablo-vielma/COINMetisBuilder/releases/download/v1.3.5-beta/build_COINMetisBuilder.v1.3.5.jl",
    "https://github.com/juan-pablo-vielma/COINMumpsBuilder/releases/download/v1.6.0-beta/build_COINMumpsBuilder.v1.6.0.jl"
]

for dependency in dependencies
    download(dependency,basename(dependency))
    evalfile(basename(dependency))
end


# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libipopt"], :libipopt),
    ExecutableProduct(prefix, "ipopt", :amplexe),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/juan-pablo-vielma/IpoptBuilder/releases/download/v3.12.10-beta2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/IpoptBuilder.v3.12.10.aarch64-linux-gnu.tar.gz", "8b65d728d3498e29e4cba725f385dde9c2adb6c9c79d0e522bc57e23a18ec0d7"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/IpoptBuilder.v3.12.10.arm-linux-gnueabihf.tar.gz", "abae43cf0f3d97212cdafba496c6f0ea46f17d206402232c30ab0c050291fe2c"),
    Linux(:i686, :glibc) => ("$bin_prefix/IpoptBuilder.v3.12.10.i686-linux-gnu.tar.gz", "3d1bfcc4baf7b91ed736afc6aedc9926afe2e2dba2927ebd5bd5df28eb537bee"),
    Windows(:i686) => ("$bin_prefix/IpoptBuilder.v3.12.10.i686-w64-mingw32.tar.gz", "39c8a54bb47f753ab1048618f8706434414eaf11aac5a049759ceb87b97b4b8b"),
    MacOS(:x86_64) => ("$bin_prefix/IpoptBuilder.v3.12.10.x86_64-apple-darwin14.tar.gz", "5c232527f18754cd1c80fea6ba23f13dde6ab89dde13c3106a3d9a1d73406144"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/IpoptBuilder.v3.12.10.x86_64-linux-gnu.tar.gz", "e54969c6c3c0c73b5a922fa29dba5ecff3850358006b52c2575144715508b106"),
    Windows(:x86_64) => ("$bin_prefix/IpoptBuilder.v3.12.10.x86_64-w64-mingw32.tar.gz", "5972b41cacf4c0f0f33ca3bfe7535d32735dabee2c28eacd3f19fdc409248aa5"),
)


# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
